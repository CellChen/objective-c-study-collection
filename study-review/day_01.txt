

1. 什么是面向对象

2. 对象

3. 什么是类?
    类就是用于描述对象的共性特征
    主要用于描述对象的属性和行为

4. 如何定义一个类
    类的声明: 告诉系统类中又哪些属性个方法
        @interface 类名: 父类
        {
            // 属性 必须写到 {} 中
        }
        // 方法 必须写到 {} 外
        - (void)test;   // 对象方法
        + (void)demo;   // 类方法
        @end

        类名: 首字母大写
    类的实现
        @implementation 类名
        @end

5. 如何创建对象
    要创建对象必须给类发送一个 new 消息, 调用类的 new 方法
        发送消息: [类名/对象 方法名称]

    Person *p = [Person new];
        > 开辟存储空间
        > 初始化属性
        > 返回地址

6. 修改对象的属性和获取对象的属性
        对象的属性默认是 @protected 不能直接访问
        要想直接访问, 需要 定义成 @public
        {
        @public
            int _age;
        }
    p->_age = 100;
    NSLog(@"age = %i", p->_age)

7. 类中可以定义两种方法
    > 类方法       + (void)test;
        不能直接访问对象的属性
        必须使用类调用

        类方法中不能直接调用对象方法
        类方法中可以直接调用类方法
    > 对象方法     - (void)demo;
        可以直接访问对象的属性
        必须使用对象调用

        对象方法中可以调用其他对象方法
        对象方法中可以直接调用类方法

    方法名采用 驼峰命名
    方法中的数据类型都必须要使用 () 括起来
    方法中的每个参数的数据类型前面都必须加上 :
    : 也是方法名的一部分

8. 类方法的应用场景
    > 如果方法中没有使用到属性(成员变量), 能用类方法就用类方法
    > 类方法的执行效率比对象方法高
    > 类方法一般用于定义工具方法
        > 字符串查找
        > 数据库操作

9. 类,对象与内存

其他:

全局变量, 局部变量, 成员变量的区别
    全局变量:
        写在函数和{}外
        作用域: 从定义开始到文件末尾
        存储: 静态区
        程序一启动就会自动分配内存空间, 直到程序结束才释放

    局部变量:
        写在函数或{}内
        作用域: 从定义开始到大括号结束或return

    成员变量:
        写在类声明中的{}中
        不能离开类
        不能定义并初始化
        存储: 堆区 (当前对象对应的堆存储空间)
        存储在堆区中的数据不能自动释放, 只能手动释放

函数, 方法的区别